{"compress":true,"commitItems":[["89e6c475-4f24-4c5e-9c4b-bbeef94c753d",1547639008738,"",[[1547638958089,["yongchao@yongchao-PC",[[1,0,"# JNA\n\n\n\n"]],[0,0],[8,8]]],[1547638958463,["yongchao@yongchao-PC",[[1,9,"\n"]],[8,8],[9,9]]],[1547638959406,["yongchao@yongchao-PC",[[-1,9,"\n"]],[9,9],[8,8]]],[1547638959589,["yongchao@yongchao-PC",[[-1,8,"\n"]],[8,8],[7,7]]],[1547638961678,["yongchao@yongchao-PC",[[1,7,"使用JNA的过程中也不一定会一帆风顺,比如会抛出”非法内存访问”,这时候检查一下变量是否==null。还有内存对齐的问题，当从内存中获取图片信息 进行保存的时候，如果内存对齐处理不好,就会抛出很严重的异常,导致JVM异常退出，JNA提供了四种内存对齐的方式，分别 是：ALIGN_DEFAULT、ALIGN_NONE、ALIGN_GNUC和ALIGN_MSVC。ALIGN_DEFAULT采用平台默认的对齐方 式(推荐);ALIGN_NONE是不采用对齐方式；ALIGN_GNUC为针对linux/gcc操作系统的对齐方式。ALIGN_MSVC为针对 win32/msvc架构的内存对齐方式。\n\n    JNA也提供了一种保护机制.比如防止JNA出现异常不会导致JVM异常退出，默认是开启这个功能的，开启方式为 System.setProperty(“jna.protected”,”true”); 记得要在JNA加载dll文件之前调用，然后try {...} catch(Throwable e)异常，不过你也不要期望过高,不要以为加上这个就万事大吉,出现”非法内存访问”的时候还是会束手无策。"]],[7,7],[505,505]]],[1547638983509,["yongchao@yongchao-PC",[[-1,72,"中获取图片信息 "]],[72,80],[72,72]]]],null,"yongchao@yongchao-PC"],["b5302297-64b9-4e57-bb13-8d9a32a22fab",1547707587002,"# JNA\n\n使用JNA的过程中也不一定会一帆风顺,比如会抛出”非法内存访问”,这时候检查一下变量是否==null。还有内存对齐的问题，当从内存进行保存的时候，如果内存对齐处理不好,就会抛出很严重的异常,导致JVM异常退出，JNA提供了四种内存对齐的方式，分别 是：ALIGN_DEFAULT、ALIGN_NONE、ALIGN_GNUC和ALIGN_MSVC。ALIGN_DEFAULT采用平台默认的对齐方 式(推荐);ALIGN_NONE是不采用对齐方式；ALIGN_GNUC为针对linux/gcc操作系统的对齐方式。ALIGN_MSVC为针对 win32/msvc架构的内存对齐方式。\n\n    JNA也提供了一种保护机制.比如防止JNA出现异常不会导致JVM异常退出，默认是开启这个功能的，开启方式为 System.setProperty(“jna.protected”,”true”); 记得要在JNA加载dll文件之前调用，然后try {...} catch(Throwable e)异常，不过你也不要期望过高,不要以为加上这个就万事大吉,出现”非法内存访问”的时候还是会束手无策。\n",[[1547707545185,["yongchao@yongchao-PC",[[1,498,"    \n"]],[497,497],[502,502]]],[1547707546241,["yongchao@yongchao-PC",[[-1,498,"    "],[1,502,"\n"]],[502,502],[499,499]]],[1547707548156,["yongchao@yongchao-PC",[[-1,297,"   "],[1,300,"   "],[-1,499,"\n"],[1,500,"g"]],[499,499],[500,500]]],[1547707548396,["yongchao@yongchao-PC",[[1,500,"ogn"]],[500,500],[503,503]]],[1547707553351,["yongchao@yongchao-PC",[[-1,500,"ogn"]],[503,503],[500,500]]],[1547707553604,["yongchao@yongchao-PC",[[-1,499,"g"],[1,500,"\n"]],[500,500],[499,499]]],[1547707553930,["yongchao@yongchao-PC",[[-1,499,"\n"],[1,500,"g"]],[499,499],[500,500]]],[1547707554247,["yongchao@yongchao-PC",[[1,500,"ou"]],[500,500],[502,502]]],[1547707554758,["yongchao@yongchao-PC",[[-1,500,"ou"]],[502,502],[500,500]]],[1547707554918,["yongchao@yongchao-PC",[[-1,499,"g"],[1,500,"\n"]],[500,500],[499,499]]],[1547707558852,["yongchao@yongchao-PC",[[-1,499,"\n"],[1,500,"构造函数"]],[499,499],[503,503]]],[1547707560215,["yongchao@yongchao-PC",[[1,503,"\n\n"]],[503,503],[504,504]]],[1547707561501,["yongchao@yongchao-PC",[[1,504,"public  NotesFileObjectStruct()  {  super(); setAlignType(Structure.ALIGN_NONE);  }"]],[504,504],[587,587]]],[1547707564895,["yongchao@yongchao-PC",[[1,540,"\n"]],[540,540],[541,541]]],[1547707567006,["yongchao@yongchao-PC",[[1,550,"\n"]],[550,550],[551,551]]],[1547707569079,["yongchao@yongchao-PC",[[1,588,"\n"]],[588,588],[589,589]]],[1547707573868,["yongchao@yongchao-PC",[[1,504,"  "],[1,541,"  "],[1,551,"  "],[1,589,"  "]],[504,590],[504,598]]],[1547707574214,["yongchao@yongchao-PC",[[1,506,"  "],[1,543,"  "],[1,557,"  "],[1,595,"  "]],[504,598],[504,606]]],[1547707574555,["yongchao@yongchao-PC",[[1,508,"  "],[1,545,"  "],[1,563,"  "],[1,601,"  "]],[504,606],[504,614]]],[1547707578206,["yongchao@yongchao-PC",[[1,510,"  "],[1,547,"  "],[1,569,"  "],[1,607,"  "]],[504,614],[504,622]]],[1547707581519,["yongchao@yongchao-PC",[[1,512,"  "],[1,549,"  "],[1,575,"  "],[1,613,"  "]],[504,622],[504,630]]]],null,"yongchao@yongchao-PC"]]}